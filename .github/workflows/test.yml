name: Test & Coverage

on:
  pull_request:
  push:
    branches: [ dev ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: coverage-workspace-${{ hashFiles('**/Cargo.lock') }}
          cache-on-failure: true

      - name: Install cargo-tarpaulin
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-tarpaulin
        env:
          # Enable explicit caching for installed tools
          CARGO_INSTALL_ROOT: ~/.cargo

      - name: Run coverage analysis
        run: |
          echo "Running coverage analysis for workspace"
          cargo tarpaulin \
            --workspace \
            --timeout 300 \
            --out xml \
            --output-dir coverage

      - name: Generate coverage summary
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/cobertura.xml
          format: markdown
          output: both
          indicators: true
          badge: true

      - name: Post coverage as PR comment
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          path: code-coverage-results.md

      - name: Upload coverage reports
        uses: codecov/codecov-action@v5
        with:
          file: coverage/cobertura.xml
          flags: workspace
          name: workspace-coverage
          fail_ci_if_error: false
